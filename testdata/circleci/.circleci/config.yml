# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.
version: 2
working_directory: &working_directory ~/fogg

jobs:
  terraform_0:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi
      - run:
          command: |
            cd terraform/global
            make  lint
  terraform_1:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi
  terraform_2:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi
  terraform_3:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi
  terraform_4:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi
  terraform_5:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi
  terraform_6:
    docker:
      - image: circleci/python:3.8
    working_directory: *working_directory
    steps:
      - checkout
      # HACK(el):Switch to key that reads private tf modules after checking out our code
      - add_ssh_keys:
          fingerprints:
            - d2:52:20:b3:82:e2:ee:e8:98:02:05:15:b5:37:f6:2c
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      - run: FOGG_VERSION="vundefined+undefined+dirty" make setup
      - run:
          command: |
            .fogg/bin/fogg apply
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after running fogg apply"
              echo "ensure you run fogg apply on your branch"
              git status
              exit 1
            fi

workflows:
  version: 2
  terraform:
    jobs:
      - terraform_0
      - terraform_1
      - terraform_2
      - terraform_3
      - terraform_4
      - terraform_5
      - terraform_6
