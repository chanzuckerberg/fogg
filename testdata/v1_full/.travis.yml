
# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.
dist: bionic
language: python
sudo: required
python: 3.6
env:
  global:
    - BUILD_START=$(date +%s)
    - BUILDEVENTS_BUILD_ID=${TRAVIS_BUILD_ID}
    - CHECK_PLANFILE_PATH=check-plan.output
    - BUILDEVENT_FILE=buildevents.plan

install:
  - STEP_START=$(date +%s)
  - STEP_NAME=install.${TRAVIS_JOB_NUMBER}
  - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
  - pip install awscli --upgrade
  - aws --version
  - FOGG_VERSION="vundefined+undefined+dirty" travis_retry make setup
  - mkdir bin # this is in theory supposed to exist already
  - curl -L -o $HOME/bin/buildevents https://github.com/honeycombio/buildevents/releases/latest/download/buildevents-linux-amd64
  - chmod 755 $HOME/bin/buildevents
  - buildevents --version
  - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
before_script:
  - STEP_START=$(date +%s)
  - STEP_NAME=before_script.${TRAVIS_JOB_NUMBER}
  - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
  - aws configure set aws_access_key_id     $IDACCT_AWS_ACCESS_KEY_ID     --profile _idacct
  - aws configure set aws_secret_access_key $IDACCT_AWS_SECRET_ACCESS_KEY --profile _idacct
  - aws --profile _idacct sts get-caller-identity


  - aws configure set profile.czi-bar.role_arn arn:aws:iam::3:role/travis-role
  - aws configure set profile.czi-bar.source_profile _idacct
  - buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID sts-caller-identity.czi-bar -- aws --profile czi-bar sts get-caller-identity

  - aws configure set profile.czi-env.role_arn arn:aws:iam::5:role/travis-role
  - aws configure set profile.czi-env.source_profile _idacct
  - buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID sts-caller-identity.czi-env -- aws --profile czi-env sts get-caller-identity

  - aws configure set profile.czi-foo.role_arn arn:aws:iam::2:role/travis-role
  - aws configure set profile.czi-foo.source_profile _idacct
  - buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID sts-caller-identity.czi-foo -- aws --profile czi-foo sts get-caller-identity

  - aws configure set profile.czi-stage.role_arn arn:aws:iam::4:role/travis-role
  - aws configure set profile.czi-stage.source_profile _idacct
  - buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID sts-caller-identity.czi-stage -- aws --profile czi-stage sts get-caller-identity

  - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME

jobs:
  include:
    - stage: fogg-apply clean
      script:
        - |
          set -e
          STEP_START=$(date +%s)
          STEP_NAME=fogg-apply-clean.${TRAVIS_JOB_NUMBER}
          STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
          .fogg/bin/fogg apply
          if [ "$(git status --porcelain)" != "" ]; then
            echo "git tree is dirty after running fogg apply"
            echo "ensure you run fogg apply on your branch"
            git status
            exit 1
          fi
          buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - pushd terraform/accounts/bar
        - travis_retry  buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID terraform/accounts/bar -- make check
        - popd
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - pushd terraform/accounts/foo
        - travis_retry  buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID terraform/accounts/foo -- make check
        - popd
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - pushd terraform/global
        - travis_retry  buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID terraform/global -- make check
        - popd
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - pushd terraform/modules/module1
        - travis_retry  buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID terraform/modules/module1 -- make check
        - popd
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - pushd terraform/envs/stage/cloud-env
        - travis_retry  buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID terraform/envs/stage/cloud-env -- make check
        - popd
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - pushd terraform/envs/stage/helm
        - travis_retry  buildevents cmd $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID terraform/envs/stage/helm -- make check
        - popd
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
    - stage: check
      script:
        - set -e
        - STEP_START=$(date +%s)
        - STEP_NAME=check.${TRAVIS_JOB_NUMBER}
        - STEP_SPAN_ID=$(echo ${STEP_NAME} | sum | cut -f 1 -d \ )
        - buildevents step $BUILDEVENTS_BUILD_ID $STEP_SPAN_ID $STEP_START $STEP_NAME
after_failure:
  - echo "$(buildevents build $BUILDEVENTS_BUILD_ID $BUILD_START failure)"
after_success:
  - echo "$(buildevents build $BUILDEVENTS_BUILD_ID $BUILD_START success)"
