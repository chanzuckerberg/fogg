# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

provider "aws" {
  version = "~> {{ .AWSProviderVersion }}"
  region = "{{ .AWSRegionProvider }}"
  profile = "{{ .AWSProfileProvider }}"
  {{ if .AccountID }}allowed_account_ids = [{{ .AccountID }}]{{ end }}
}

# Aliased Providers (for doing things in every region).
{{ $out := . }}
{{ range $region := .AWSRegions }}
  provider "aws" {
    alias = "{{ $region }}"
    version = "~> {{ $out.AWSProviderVersion }}"
    region = "{{ $region }}"
    profile = "{{ $out.AWSProfileProvider }}"
    {{ if $out.AccountID }}allowed_account_ids = [{{ $out.AccountID }}]{{ end }}
  }
{{ end }}

terraform {
  required_version = "~>{{ .TerraformVersion }}"

  backend "s3" {
    bucket = "{{ .InfraBucket }}"
    {{/* {%- if env is defined and component_name is defined %} */}}
    key    = "terraform/{{ .Project }}/envs/{{ .Env }}/components/{{ .Component }}.tfstate"

{{/*
    {%- else %}
    key    = "terraform/{{ project }}/global.tfstate"
    {%- endif %}
*/}}
    encrypt = true
    region = "{{ .AWSRegionBackend }}"
    profile = "{{ .AWSProfileBackend }}"
  }
}

variable "env" {
  type    = "string"
  default = "{{ .Env }}"
}

variable "project" {
  type    = "string"
  default = "{{ .Project }}"
}

variable "region" {
  type    = "string"
  default = "{{ .AWSRegionProvider }}"
}

variable "component" {
  type = "string"
  default = "{{ .Component }}"
}

variable "aws_profile" {
  type = "string"
  default =  "{{ .AWSProfileProvider }}"
}

variable "owner" {
  type = "string"
  default = "{{ .Owner }}"
}

variable "tags" {
  type = "map"
  default = {
    project   = "{{ .Project }}"
    env       = "{{ .Env }}"
    service   = "{{ .Component }}"
    owner     = "{{ .Owner }}"
    managedBy = "terraform"
  }
}

{{ range $key, $val := .ExtraVars }}
variable "{{ $key }}" {
  type = "string"
  default = "{{ $val }}"
}
{{ end }}

data "terraform_remote_state" "global" {
  backend = "s3"

  config {
    bucket = "{{ $out.InfraBucket }}"
    key    = "terraform/{{ .Project }}/global.tfstate"
    region = "{{ $out.AWSRegionBackend }}"
    {{ if $out.AWSProfileBackend }}profile = "{{ $out.AWSProfileBackend }}"{{ end }}
  }
}

{{ range $component := .OtherComponents | sortAlpha  }}
data "terraform_remote_state" "{{ $component }}" {
  backend = "s3"

  config {
    bucket = "{{ $out.InfraBucket }}"
    key    = "terraform/{{ $out.Project }}/envs/{{ $out.Env }}/components/{{ $component }}.tfstate"
    region = "{{ $out.AWSRegionBackend }}"
    {{ if $out.AWSProfileBackend }}profile = "{{ $out.AWSProfileBackend }}"{{ end }}
  }
}
{{ end }}

# remote state for accounts
{{ range $accountName, $account := .Accounts }}
data "terraform_remote_state" "{{ $accountName }}" {
  backend = "s3"

  config {
    bucket = "{{ $account.InfraBucket }}"
    key     = "terraform/{{ .Project }}/accounts/{{ $account.AccountName }}.tfstate"
    region = "{{ $account.AWSRegionBackend }}"
    {{ if $account.AWSProfileBackend }}profile = "{{ $account.AWSProfileBackend }}"{{ end }}
  }
}
{{ end }}

# map of aws_accounts
variable "aws_accounts" {
  type = "map"
  default = {
  {{ range $accountName, $account := .Accounts }}
    {{ if $account.AccountID }}
        {{ $accountName }} = {{ $account.AccountID }}
    {{ end }}
  {{ end }}
  }
}
