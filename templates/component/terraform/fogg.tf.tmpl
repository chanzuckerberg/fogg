# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

{{ if .Providers.AWS }}
  provider "aws" {
    version = "~> {{ .Providers.AWS.Version }}"
    region = "{{ .Providers.AWS.Region }}"
    profile = "{{ .Providers.AWS.Profile }}"
    allowed_account_ids = [{{ .Providers.AWS.AccountID }}]
  }

  # Aliased Providers (for doing things in every region).
  {{ $outter := . }}
  {{ range $region := .Providers.AWS.AdditionalRegions }}
    provider "aws" {
      alias = "{{ $region }}"
      version = "~> {{ $outter.Providers.AWS.Version }}"
      region = "{{ $region }}"
      profile = "{{ $outter.Providers.AWS.Profile }}"
      allowed_account_ids = [{{ $outter.Providers.AWS.AccountID }}]
    }
  {{ end }}

{{ end }}

terraform {
  required_version = "~>{{ .TerraformVersion }}"

  backend "s3" {
    bucket         = "{{ .Backend.Bucket }}"
    {{ if .Backend.DynamoTable }}dynamodb_table = "{{ .Backend.DynamoTable }}"{{ end }}
    {{/* {%- if env is defined and component_name is defined %} */}}
    key            = "terraform/{{ .Project }}/envs/{{ .Env }}/components/{{ .Component }}.tfstate"

{{/*
    {%- else %}
    key    = "terraform/{{ project }}/global.tfstate"
    {%- endif %}
*/}}
    encrypt = true
    region = "{{ .Backend.Region }}"
    profile = "{{ .Backend.Profile }}"
  }
}

variable "env" {
  type    = "string"
  default = "{{ .Env }}"
}

variable "project" {
  type    = "string"
  default = "{{ .Project }}"
}

{{if .Providers.AWS}}
  variable "region" {
    type    = "string"
    default = "{{ .Providers.AWS.Region }}"
  }
{{ end }}

variable "component" {
  type = "string"
  default = "{{ .Component }}"
}

{{if .Providers.AWS}}
  variable "aws_profile" {
    type = "string"
    default =  "{{ .Providers.AWS.Profile }}"
  }
{{ end }}


variable "owner" {
  type = "string"
  default = "{{ .Owner }}"
}

variable "tags" {
  type = "map"
  default = {
    project   = "{{ .Project }}"
    env       = "{{ .Env }}"
    service   = "{{ .Component }}"
    owner     = "{{ .Owner }}"
    managedBy = "terraform"
  }
}

{{ range $key, $val := .ExtraVars }}
variable "{{ $key }}" {
  type = "string"
  default = "{{ $val }}"
}
{{ end }}

data "terraform_remote_state" "global" {
  backend = "s3"

  config {
    bucket         = "{{ .Backend.Bucket }}"
    {{ if .Backend.DynamoTable }}dynamodb_table = "{{ .Backend.DynamoTable }}"{{ end }}
    key            = "terraform/{{ .Project }}/global.tfstate"
    region         = "{{ .Backend.Region }}"
    {{ if .Backend.Profile }}profile        = "{{ .Backend.Profile }}"{{ end }}
  }
}

{{ $outter := . }}
{{ range $component := .OtherComponents | sortAlpha  }}
data "terraform_remote_state" "{{ $component }}" {
  backend = "s3"

  config {
    bucket         = "{{ $outter.Backend.Bucket }}"
    {{ if $outter.Backend.DynamoTable }}dynamodb_table = "{{ $outter.Backend.DynamoTable }}"{{ end }}
    key            = "terraform/{{ $outter.Project }}/envs/{{ $outter.Env }}/components/{{ $component }}.tfstate"
    region         = "{{ $outter.Backend.Region }}"
    {{ if $outter.Backend.Profile }}profile        = "{{ $outter.Backend.Profile }}"{{ end }}
  }
}
{{ end }}

# remote state for accounts
{{ range $accountName, $account := .Accounts }}
data "terraform_remote_state" "{{ $accountName }}" {
  backend = "s3"

  config {
    bucket         = "{{ $account.Backend.Bucket }}"
    {{ if $account.Backend.DynamoTable }}dynamodb_table = "{{ $account.Backend.DynamoTable }}"{{ end }}
    key            = "terraform/{{ .Project }}/accounts/{{ $account.AccountName }}.tfstate"
    region         = "{{ $account.Backend.Region }}"
    {{ if $account.Backend.Profile }}profile        = "{{ $account.Backend.Profile }}"{{ end }}
  }
}
{{ end }}

# map of aws_accounts
variable "aws_accounts" {
  type = "map"
  default = {
  {{ range $accountName, $account := .Accounts }}
    {{ if $account.Providers.AWS }}
        {{ $accountName }} = {{ $account.Providers.AWS.AccountID }}
    {{ end }}
  {{ end }}
  }
}
