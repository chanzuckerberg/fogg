# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.
{{- $githubActionsCI := . }}

on: push

{{- if $githubActionsCI.Env }}
env:
{{- range $k, $v := .Env }}
    {{ $k }}: {{ $v }}
{{- end }}
{{- end }}

jobs:
{{- range $idx, $testBucket := $githubActionsCI.TestBuckets }}
  terraform_{{$idx}}:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - run: |
          mkdir /tmp/terraform-docs
          cd /tmp/terraform-docs

          # https://terraform-docs.io/user-guide/installation/#pre-compiled-binary
          curl -sSLo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          chmod +x terraform-docs
          echo "$PWD" >> $GITHUB_PATH
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: pip install awscli --upgrade --user
      - run: aws --version
      {{- if not (eq (len $githubActionsCI.SSHKeySecrets) 0) }}
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: |
          {{ range $idx, $secret := $githubActionsCI.SSHKeySecrets }}
            {{`${{`}} secrets.{{ $secret }} {{`}}`}}
          {{ end }}
      {{ end }}
      - run: FOGG_VERSION="v{{ $githubActionsCI.FoggVersion }}" make setup
      - run: |
          .fogg/bin/fogg apply
          if [ "$(git status --porcelain)" != "" ]; then
            echo "git tree is dirty after running fogg apply"
            echo "ensure you run fogg apply on your branch"
            git status
            exit 1
          fi
{{- if not (eq (len $githubActionsCI.AWSProfiles) 0) }}
      - run: aws configure set aws_access_key_id     {{`${{`}} secrets.IDACCT_AWS_ACCESS_KEY_ID {{`}}`}}     --profile _idacct
      - run: aws configure set aws_secret_access_key {{`${{`}} secrets.IDACCT_AWS_SECRET_ACCESS_KEY {{`}}`}} --profile _idacct
      - run: aws --profile _idacct sts get-caller-identity
{{- end }}
{{- range $profileName, $profile := $githubActionsCI.AWSProfiles }}
      - run: aws configure set profile.{{ $profileName }}.role_arn arn:aws:iam::{{ $profile.AccountID }}:role/{{ $profile.RoleName}}
      - run: aws configure set profile.{{ $profileName }}.source_profile _idacct
      - run: aws --profile {{ $profileName }} sts get-caller-identity
{{- end }}
  {{- range $component := $testBucket }}
      - run: |
          cd {{ $component.Dir }}
          make  {{ $component.Command }}
  {{- end }}
{{- end }}
