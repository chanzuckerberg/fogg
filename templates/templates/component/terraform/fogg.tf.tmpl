# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

{{ if .ProviderConfiguration.AWS }}
{{ template "aws_provider" .ProviderConfiguration.AWS}}
  # Aliased Providers (for doing things in every region).
  {{ range $p := .ProviderConfiguration.AWSAdditionalProviders }}
    {{ template "aws_provider" $p}}
  {{ end }}

{{ end }}

{{ if .ProviderConfiguration.Snowflake }}{{ if not .ProviderConfiguration.Snowflake.CustomProvider }}
  {{ template "snowflake_provider" .ProviderConfiguration.Snowflake }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Assert }}{{ if not .ProviderConfiguration.Assert.CustomProvider }}
  {{ template "assert" .ProviderConfiguration.Assert }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Bless }}{{ if not .ProviderConfiguration.Bless.CustomProvider }}
  {{ template "bless_provider" .ProviderConfiguration.Bless }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Okta}}{{ if not .ProviderConfiguration.Okta.CustomProvider }}
  {{ template "okta_provider" .ProviderConfiguration.Okta}}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Github}}{{ if not .ProviderConfiguration.Github.CustomProvider }}
  {{ template "github_provider" .ProviderConfiguration.Github}}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Heroku }}{{ if not .ProviderConfiguration.Heroku.CustomProvider }}
  {{ template "heroku_provider" .ProviderConfiguration.Heroku }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Datadog }}{{ if not .ProviderConfiguration.Datadog.CustomProvider }}
  {{ template "datadog_provider" .ProviderConfiguration.Datadog }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Tfe }}{{ if not .ProviderConfiguration.Tfe.CustomProvider }}
    {{ template "tfe_provider" .ProviderConfiguration.Tfe }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Sops }}{{ if not .ProviderConfiguration.Sops.CustomProvider }}
    {{ template "sops_provider" .ProviderConfiguration.Sops }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Sentry }}{{ if not .ProviderConfiguration.Sentry.CustomProvider }}
    {{ template "sentry_provider" .ProviderConfiguration.Sentry }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Auth0 }}
  {{ template "auth0_provider" .ProviderConfiguration.Auth0 }}
{{ end }}

terraform {
  required_version = "={{ .TerraformVersion }}"

  {{ template "backend" .Backend }}

  required_providers {

  {{ range $k, $v := .ProviderVersions }}
    {{ $k }} = {
      source = "{{ $v.Source }}"
      {{ if $v.Version }}
      version = "{{ $v.Version }}"
      {{ end }}
    }
  {{ end}}
  }
}
# tflint-ignore: terraform_unused_declarations
variable "env" {
  type    =  string
  default = "{{ .Env }}"
}

# tflint-ignore: terraform_unused_declarations
variable "project" {
  type    =  string
  default = "{{ .Project }}"
}

# tflint-ignore: terraform_unused_declarations
{{if .ProviderConfiguration.AWS}}
  variable "region" {
    type    =  string
    default = "{{ .ProviderConfiguration.AWS.Region }}"
  }
{{ end }}

# tflint-ignore: terraform_unused_declarations
variable "component" {
  type =  string
  default = "{{ .Name }}"
}

{{ if (avail "Account" .) }}
variable "account" {
  type =  string
  default = "{{ .Account }}"
}
{{ end }}

{{ if .ProviderConfiguration.AWS }}{{ if .ProviderConfiguration.AWS.Profile }}
  variable "aws_profile" {
    type =  string
    default =  "{{ .ProviderConfiguration.AWS.Profile }}"
  }
{{ end }}{{ end }}

# tflint-ignore: terraform_unused_declarations
variable "owner" {
  type =  string
  default = "{{ .Owner }}"
}

# tflint-ignore: terraform_unused_declarations
variable "tags" {
  type =  object({project: string, env: string, service: string, owner: string, managedBy: string, tfstateKey: string})
  default = {
    project   = "{{ .Project }}"
    env       = "{{ .Env }}"
    service   = "{{ .Name }}"
    owner     = "{{ .Owner }}"
    {{- with .Backend }}
    {{- if eq .Kind "s3" }}
    tfstateKey = "{{ .S3.KeyPath }}"
    {{ else if eq .Kind "remote" }}
    tfstateKey = "{{ .Remote.HostName }}/{{ .Remote.Organization }}/{{ .Remote.Workspace }}"
    {{- end }}
    {{- end }}
    managedBy = "terraform"
  }
}

{{ range $key, $val := .ExtraVars }}
variable "{{ $key }}" {
  type =  string
  default = "{{ $val }}"
}
{{ end }}

# tflint-ignore: terraform_unused_declarations
variable "aws_accounts" {
  type =  map(string)
  default = {
  {{ range $account, $id := .Accounts }}
    {{ $account }} = "{{ $id }}"
  {{ end }}
  }
}
