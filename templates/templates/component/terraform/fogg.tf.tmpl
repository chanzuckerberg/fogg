# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.
variable "TFC_RUN_ID" {
  type    = string
  default = "unknown"
}
variable "TFC_WORKSPACE_NAME" {
  type    = string
  default = "unknown"
}
variable "TFC_WORKSPACE_SLUG" {
  type    = string
  default = "unknown"
}
variable "TFC_CONFIGURATION_VERSION_GIT_BRANCH" {
  type    = string
  default = "unknown"
}
variable "TFC_CONFIGURATION_VERSION_GIT_COMMIT_SHA" {
  type    = string
  default = "unknown"
}
variable "TFC_CONFIGURATION_VERSION_GIT_TAG" {
  type    = string
  default = "unknown"
}
variable "TFC_PROJECT_NAME" {
  type    = string
  default = "unknown"
}
{{ if .ProviderConfiguration.AWS }}
{{ template "aws_provider" .ProviderConfiguration.AWS}}
  # Aliased Providers (for doing things in every region).
  {{ range $p := .ProviderConfiguration.AWSAdditionalProviders }}
    {{ template "aws_provider" $p}}
  {{ end }}
{{ end }}

{{ if .ProviderConfiguration.Snowflake }}{{ if not .ProviderConfiguration.Snowflake.CustomProvider }}
  {{ template "snowflake_provider" .ProviderConfiguration.Snowflake }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Assert }}{{ if not .ProviderConfiguration.Assert.CustomProvider }}
  {{ template "assert" .ProviderConfiguration.Assert }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Bless }}{{ if not .ProviderConfiguration.Bless.CustomProvider }}
  {{ template "bless_provider" .ProviderConfiguration.Bless }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Okta}}{{ if not .ProviderConfiguration.Okta.CustomProvider }}
  {{ template "okta_provider" .ProviderConfiguration.Okta}}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Github}}{{ if not .ProviderConfiguration.Github.CustomProvider }}
  {{ template "github_provider" .ProviderConfiguration.Github}}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Heroku }}{{ if not .ProviderConfiguration.Heroku.CustomProvider }}
  {{ template "heroku_provider" .ProviderConfiguration.Heroku }}
  {{ end }}{{ end }}

{{ if .ProviderConfiguration.Datadog }}{{ if not .ProviderConfiguration.Datadog.CustomProvider }}
  {{ template "datadog_provider" .ProviderConfiguration.Datadog }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Tfe }}{{ if not .ProviderConfiguration.Tfe.CustomProvider }}
    {{ template "tfe_provider" .ProviderConfiguration.Tfe }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Sentry }}{{ if not .ProviderConfiguration.Sentry.CustomProvider }}
    {{ template "sentry_provider" .ProviderConfiguration.Sentry }}
{{ end }}{{ end }}

{{ if .ProviderConfiguration.Auth0 }}{{ if not .ProviderConfiguration.Auth0.CustomProvider }}
  {{ template "auth0_provider" .ProviderConfiguration.Auth0 }}
{{ end }}{{ end }}

{{- if .ProviderConfiguration.Kubernetes -}}{{- if not .ProviderConfiguration.Kubernetes.CustomProvider -}}
  {{- template "kubernetes_provider" .ProviderConfiguration -}}
{{- end -}}{{- end -}}

terraform {
  required_version = "={{ .TerraformVersion }}"

  {{ template "backend" .Backend }}

  required_providers {

  {{ range $k, $v := .ProviderVersions }}
    {{ $k }} = {
      source = "{{ $v.Source }}"
      {{ if $v.Version }}
      version = "{{ $v.Version }}"
      {{ end }}
    }
  {{ end}}
  }
}
# tflint-ignore: terraform_unused_declarations
variable "env" {
  type    =  string
  default = "{{ .Env }}"
}

# tflint-ignore: terraform_unused_declarations
variable "project" {
  type    =  string
  default = "{{ .Project }}"
}

{{if .ProviderConfiguration.AWS}}
  # tflint-ignore: terraform_unused_declarations
  variable "region" {
    type    =  string
    default = "{{ .ProviderConfiguration.AWS.Region }}"
  }
{{ end }}

# tflint-ignore: terraform_unused_declarations
variable "component" {
  type =  string
  default = "{{ .Name }}"
}

{{ if (avail "Account" .) }}
# tflint-ignore: terraform_unused_declarations
variable "account" {
  type =  string
  default = "{{ .Account }}"
}
{{ end }}

{{ if .ProviderConfiguration.AWS }}{{ if .ProviderConfiguration.AWS.Profile }}
  # tflint-ignore: terraform_unused_declarations
  variable "aws_profile" {
    type =  string
    default =  "{{ .ProviderConfiguration.AWS.Profile }}"
  }
{{ end }}{{ end }}

# tflint-ignore: terraform_unused_declarations
variable "owner" {
  type =  string
  default = "{{ .Owner }}"
}

# tflint-ignore: terraform_unused_declarations
# DEPRECATED: this field is deprecated in favor or 
# AWS provider default tags.
variable "tags" {
  type =  object({project: string, env: string, service: string, owner: string, managedBy: string})
  default = {
    project   = "{{ .Project }}"
    env       = "{{ .Env }}"
    service   = "{{ .Name }}"
    owner     = "{{ .Owner }}"
    managedBy = "terraform"
  }
}

{{ range $key, $val := .ExtraVars }}
# tflint-ignore: terraform_unused_declarations
variable "{{ $key }}" {
  type =  string
  default = "{{ $val }}"
}
{{ end }}

{{ if .Global}}
{{ if .Global.Backend.Kind}}
# tflint-ignore: terraform_unused_declarations
data "terraform_remote_state" "global" {
  backend = "{{ .Global.Backend.Kind }}"

  config = {
    {{ template "remote_backend" .Global.Backend }}
  }
}{{ end }}{{end}}

{{ $outer := . }}
{{ range $component, $backend := .ComponentBackends  }}
{{ if ne $component $outer.Name }}
data "terraform_remote_state" "{{ $component }}" {
  backend = "{{ $backend.Kind }}"

  config = {
      {{ template "remote_backend" $backend }}
  }
}
{{ end }}
{{ end }}

{{ range $name, $backend := .AccountBackends }}
data "terraform_remote_state" "{{ $name }}" {
  backend = "{{ $backend.Kind }}"

  config = {
    {{ template "remote_backend" $backend }}
  }
}
{{ end }}

{{ if .NeedsAWSAccountsVariable }}
# tflint-ignore: terraform_unused_declarations
variable "aws_accounts" {
  type =  map(string)
  default = {
  {{ range $account, $id := .Accounts }}
    {{ $account }} = "{{ $id }}"
  {{ end }}
  }
}
{{end}}