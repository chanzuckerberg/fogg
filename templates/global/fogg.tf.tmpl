# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

{{ if .Providers.AWS }}
  provider "aws" {
    version = "~> {{ .Providers.AWS.Version }}"
    region = "{{ .Providers.AWS.Region }}"
    profile = "{{ .Providers.AWS.Profile }}"
    {{ if .Providers.AWS.AccountID }}allowed_account_ids = [{{ .Providers.AWS.AccountID }}]{{ end }}
  }

  # Aliased Providers (for doing things in every region).
  {{ $p := .Providers.AWS }}
  {{ range $region := .Providers.AWS.AdditionalRegions }}
    provider "aws" {
      alias = "{{ $region }}"
      version = "~> {{ $p.Version }}"
      region = "{{ $region }}"
      profile = "{{ $p.Profile }}"
      {{ if $p.AccountID }}allowed_account_ids = [{{ $p.AccountID }}]{{ end }}
    }
  {{ end }}
{{ end }}

{{ if .Providers.Snowflake }}
  {{ template "snowflake_provider" .Providers.Snowflake }}
{{ end }}

{{ if .Providers.Bless}}
  {{ template "bless_provider" .Providers.Bless }}
{{ end }}

{{ if .Providers.Okta}}
  {{ template "okta_provider" .Providers.Okta}}
{{ end }}

{{ if .Providers.Github}}
  {{ template "github_provider" .Providers.Github}}
{{ end }}

{{ if .Providers.Heroku }}
  {{ template "heroku_provider" .Providers.Heroku }}
{{ end }}

{{ if .Providers.Datadog }}
  {{ template "datadog_provider" .Providers.Datadog }}
{{ end }}


terraform {
  required_version = "~>{{ .TerraformVersion }}"

  backend "s3" {
    bucket         = "{{ .Backend.Bucket }}"
    {{ if .Backend.DynamoTable }}dynamodb_table = "{{ .Backend.DynamoTable }}"{{ end }}
    {{/* {%- if env is defined and component_name is defined %} */}}
    key    = "terraform/{{ .Project }}/{{ .Component }}.tfstate"
{{/*
    {%- else %}
    key    = "terraform/{{ project }}/global.tfstate"
    {%- endif %}
*/}}
    encrypt = true
    region = "{{ .Backend.Region }}"
    profile = "{{ .Backend.Profile }}"
  }
}

variable "env" {
  type    =  string
  default = "{{ .Env }}"
}

variable "project" {
  type    =  string
  default = "{{ .Project }}"
}

{{ if .Providers.AWS }}
  variable "region" {
    type    =  string
    default = "{{ .Providers.AWS.Region }}"
  }
{{ end }}

variable "component" {
  type =  string
  default = "{{ .Component }}"
}

{{ if .Providers.AWS }}
  variable "aws_profile" {
    type =  string
    default =  "{{ .Providers.AWS.Profile }}"
  }
{{ end }}

variable "owner" {
  type =  string
  default = "{{ .Owner }}"
}

variable "tags" {
  type =  map(string)
  default = {
    project   = "{{ .Project }}"
    env       = "{{ .Env }}"
    service   = "{{ .Component }}"
    owner     = "{{ .Owner }}"
    managedBy = "terraform"
  }
}

{{ range $key, $val := .ExtraVars }}
variable "{{ $key }}" {
  type =  string
  default = "{{ $val }}"
}
{{ end }}

{{ $outer := . }}
{{ range $component := .OtherComponents | sortAlpha  }}
data "terraform_remote_state" "{{ $component }}" {
  backend = "s3"

  config = {
    bucket         = "{{ $outer.Backend.Bucket }}"
    {{ if .Backend.DynamoTable }}dynamodb_table = "{{ .Backend.DynamoTable }}"{{ end }}
    key            = "terraform/{{ $.Project }}/envs/{{ $outer.Env }}/components/{{ $component }}.tfstate"
    region         = "{{ $outer.Backend.Region }}"
    profile        = "{{ $outer.Backend.Profile }}"
  }
}
{{ end }}

{{ template "common_providers" }}
