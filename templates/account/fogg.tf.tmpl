# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

# Default Provider
provider "aws" {
  version = "~> {{ .AWSProviderVersion }}"
  region = "{{ .AWSRegionProvider }}"
  profile = "{{ .AWSProfileProvider }}"
  {{ if .AccountID }}allowed_account_ids = [{{ .AccountID }}]{{ end }}
}

# Aliased Providers (for doing things in every region).
{{ $out := .}}
{{ range $region := .AWSRegions }}
  provider "aws" {
    alias = "{{ $region }}"
    version = "~> {{ $out.AWSProviderVersion }}"
    region = "{{ $region }}"
    profile = "{{ $out.AWSProfileProvider }}"
    {{ if $out.AccountID }}allowed_account_ids = [{{ $out.AccountID }}]{{ end }}
  }
{{ end }}

terraform {
  required_version = "={{ .TerraformVersion }}"

  backend "s3" {
    bucket         = "{{ .InfraBucket }}"
    {{ if .InfraDynamoTable }}dynamodb_table = "{{ .InfraDynamoTable }}"{{ end }}
    key            = "terraform/{{ .Project }}/accounts/{{ .AccountName }}.tfstate"
    encrypt        = true
    region         = "{{ .AWSRegionBackend }}"
    profile        = "{{ .AWSProfileBackend }}"
  }
}

variable "project" {
  type    = "string"
  default = "{{ .Project }}"
}

variable "region" {
  type    = "string"
  default = "{{ .AWSRegionBackend }}"
}

variable "aws_profile" {
  type = "string"
  default =  "{{ .AWSProfileProvider }}"
}

variable "owner" {
  type = "string"
  default = "{{ .Owner }}"
}

variable "aws_accounts" {
  type = "map"
  default = {
  {{ range $account, $id := .AllAccounts }}
    {{ if $id }}
        {{ $account }} = {{ $id }}
    {{ end }}
  {{ end }}
  }
}

{{ range $key, $val := .ExtraVars }}
variable "{{ $key }}" {
  type = "string"
  default = "{{ $val }}"
}
{{ end }}

data "terraform_remote_state" "global" {
  backend = "s3"

  config {
    bucket         = "{{ .InfraBucket }}"
    {{ if .InfraDynamoTable }}dynamodb_table = "{{ .InfraDynamoTable }}"{{ end }}
    key            = "terraform/{{ .Project }}/global.tfstate"
    region         = "{{ .AWSRegionBackend }}"
    {{ if .AWSProfileBackend }}profile        = "{{ .AWSProfileBackend }}"{{ end }}
  }
}
