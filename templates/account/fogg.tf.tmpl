# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

{{if .Providers.AWS}}
{{ template "aws_provider" .Providers.AWS}}
  # Aliased Providers (for doing things in every region).
  {{ range $p := .Providers.AWSAdditionalProviders }}
    {{ template "aws_provider" $p}}
  {{ end }}
{{ end }}

{{ if .Providers.Snowflake }}
  {{ template "snowflake_provider" .Providers.Snowflake }}
{{ end }}

{{ if .Providers.Bless }}
  {{ template "bless_provider" .Providers.Bless }}
{{ end }}

{{ if .Providers.Okta}}
  {{ template "okta_provider" .Providers.Okta}}
{{ end }}

{{ if .Providers.Github}}
  {{ template "github_provider" .Providers.Github}}
{{ end }}

{{ if .Providers.Heroku }}
  {{ template "heroku_provider" .Providers.Heroku }}
{{ end }}

{{ if .Providers.Datadog }}
  {{ template "datadog_provider" .Providers.Datadog }}
{{ end }}

{{ if .Providers.Tfe }}{{ if .Providers.Tfe.Enabled }}
    {{ template "tfe_provider" .Providers.Tfe }}
{{ end }}{{ end }}


terraform {
  required_version = "={{ .TerraformVersion }}"
{{ template "backend" .Backend }}
}

variable project {
  type    =  string
  default = "{{ .Project }}"
}

{{ if .Providers.AWS }}
  variable region {
    type    =  string
    default = "{{ .Providers.AWS.Region }}"
  }
{{ end }}

{{ if .Providers.AWS }}{{ if .Providers.AWS.Profile }}
  variable aws_profile {
    type =  string
    default =  "{{ .Providers.AWS.Profile }}"
  }
{{ end }}{{ end }}

variable owner {
  type =  string
  default = "{{ .Owner }}"
}

# map of aws_accounts
variable aws_accounts {
  type =  map
  default = {
  {{ range $account, $id := .AllAccounts }}
    {{ if $id }}
        {{ $account }} = {{ $id }}
    {{ end }}
  {{ end }}
  }
}

{{ range $key, $val := .ExtraVars }}
variable {{ $key }} {
  type =  string
  default = "{{ $val }}"
}
{{ end }}

data terraform_remote_state global {
  backend = "{{ .Global.Backend.Kind }}"

  config = {
    {{ template "remote_backend" .Global.Backend }}
  }
}

{{ $outer := . }}
{{ range $accountName, $backend := .AccountBackends}}
{{ if ne $accountName $outer.AccountName }}
data terraform_remote_state {{ $accountName }} {
  backend = "{{ $backend.Kind }}"

  config = {
    {{ template "remote_backend" $backend }}
  }
}
{{ end }}
{{ end }}

{{ template "common_providers" }}
