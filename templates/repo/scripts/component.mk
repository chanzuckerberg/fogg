# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

TF_VARS := $(patsubst %,-e%,$(filter TF_VAR_%,$(.VARIABLES)))
REPO_ROOT := $(shell git rev-parse --show-toplevel)
REPO_RELATIVE_PATH := $(shell git rev-parse --show-prefix)
# We need to do this because `terraform fmt` recurses into .terraform/modules
# and wont' accept more than one file at a time.
TF=$(wildcard *.tf)
IMAGE_VERSION=$(DOCKER_IMAGE_VERSION)_TF$(TERRAFORM_VERSION)

docker_base = \
	docker run --rm -e HOME=/home -v $$HOME/.aws:/home/.aws -v $(REPO_ROOT):/repo \
	-v $(REPO_ROOT)/.bin:/usr/local/bin -v $(REPO_ROOT)/terraform.d:/repo/$(REPO_RELATIVE_PATH)/terraform.d \
	-e GIT_SSH_COMMAND='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no' \
	-e RUN_USER_ID=$(shell id -u) -e RUN_GROUP_ID=$(shell id -g) \
	-e TF_PLUGIN_CACHE_DIR="/repo/.terraform.d/plugin-cache" -e TF="$(TF)" \
	-w /repo/$(REPO_RELATIVE_PATH) $(TF_VARS) $(FOGG_DOCKER_FLAGS) $$(sh $(REPO_ROOT)/scripts/docker-ssh-mount.sh)
docker_terraform = $(docker_base) chanzuckerberg/terraform:$(IMAGE_VERSION)
docker_sh = $(docker_base) --entrypoint='/bin/sh' chanzuckerberg/terraform:$(IMAGE_VERSION)

all:

fmt:
	@$(docker_sh) -c 'for f in $(TF); do printf .; terraform fmt $$f; done'; \
	echo

lint: terraform-validate lint-terraform-fmt lint-tflint

lint-tflint: init
	@if (( $$TFLINT_ENABLED )); then \
    $(docker_sh) -c 'tflint' || exit $$?; \
	else \
    echo "tflint not enabled"; \
	fi \

terraform-validate: init
	@$(docker_sh) -c 'terraform validate -check-variables=true $$f || exit $$?'

lint-terraform-fmt:
	@$(docker_sh) -c 'for f in $(TF); do printf .; terraform fmt --check=true --diff=true $$f || exit $$? ; done'

get: ssh-forward
	$(docker_terraform) get --update=true

plan: fmt get init ssh-forward
	$(docker_terraform) plan

apply: FOGG_DOCKER_FLAGS = -it
apply: fmt get init ssh-forward
	$(docker_terraform) apply -auto-approve=false

docs:
	@echo

clean:
	-rm -rfv .terraform/modules
	-rm -rfv .terraform/plugins

test:

init: ssh-forward
	$(docker_terraform) init -input=false

check-plan: init get ssh-forward
	$(docker_terraform) plan -detailed-exitcode; \
	ERR=$$?; \
	if [ $$ERR -eq 0 ] ; then \
		echo "Success"; \
	elif [ $$ERR -eq 1 ] ; then \
		echo "Error in plan execution."; \
		exit 1; \
	elif [ $$ERR -eq 2 ] ; then \
		echo "Diff";  \
	fi

ssh-forward:
	bash $(REPO_ROOT)/scripts/docker-ssh-forward.sh

run:
	$(docker_terraform) $(CMD)

.PHONY: all apply clean docs fmt get lint plan run ssh-forward test
